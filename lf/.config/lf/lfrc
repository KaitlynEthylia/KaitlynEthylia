set ratios 1:2:3
set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/preview
# interpreter for shell commands
set shell sh

set icons true
set hidden

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

set scrolloff 10

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd trash %set -f; mv $fx ~/.trash

cmd delete %{{
    set -f
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

cmd chmodx %{{
	set -f
	for file in $fx; do
		if [ -x $file ]; then
			chmod -x $file
		else
			chmod +x $file
		fi
	done
	lf -remote 'send reload'
	lf -remote 'send unselect'
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd z %{{
	result="$(zoxide query --exclude $PWD $@)"
	lf -remote "send $id cd $result"
}}

cmd zi ${{
	result="$(zoxide query -i)"
	lf -remote "send $id cd $result"
}}


cmd mk %{{
	set -f
	case $1 in
		*?.*) touch $1;;
		*) mkdir -p $1;;
	esac
}}

map <c-n> push :mk<space>

map zo zi

map <enter> shell
map <delete> delete

map d delete
map c cut
map a clear

map t trash

map f tar
map F extract

map X !$f

map x chmodx

map o &mimeopen $f
map O $mimeopen --ask $f

map r push :rename<space>
